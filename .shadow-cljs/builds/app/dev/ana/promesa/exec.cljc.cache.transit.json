["^ ","~:output",["^ ","~:js","goog.provide('promesa.exec');\r\nif((typeof promesa !== 'undefined') && (typeof promesa.exec !== 'undefined') && (typeof promesa.exec.default_scheduler !== 'undefined')){\r\n} else {\r\npromesa.exec.default_scheduler = (new cljs.core.Delay((function (){\r\nreturn (promesa.exec.__GT_ScheduledExecutor.cljs$core$IFn$_invoke$arity$0 ? promesa.exec.__GT_ScheduledExecutor.cljs$core$IFn$_invoke$arity$0() : promesa.exec.__GT_ScheduledExecutor.call(null));\r\n}),null));\r\n}\r\nif((typeof promesa !== 'undefined') && (typeof promesa.exec !== 'undefined') && (typeof promesa.exec.default_executor !== 'undefined')){\r\n} else {\r\npromesa.exec.default_executor = (new cljs.core.Delay((function (){\r\nreturn (promesa.exec.__GT_MicrotaskExecutor.cljs$core$IFn$_invoke$arity$0 ? promesa.exec.__GT_MicrotaskExecutor.cljs$core$IFn$_invoke$arity$0() : promesa.exec.__GT_MicrotaskExecutor.call(null));\r\n}),null));\r\n}\r\nif((typeof promesa !== 'undefined') && (typeof promesa.exec !== 'undefined') && (typeof promesa.exec.current_thread_executor !== 'undefined')){\r\n} else {\r\npromesa.exec.current_thread_executor = (new cljs.core.Delay((function (){\r\nreturn (promesa.exec.__GT_CurrentThreadExecutor.cljs$core$IFn$_invoke$arity$0 ? promesa.exec.__GT_CurrentThreadExecutor.cljs$core$IFn$_invoke$arity$0() : promesa.exec.__GT_CurrentThreadExecutor.call(null));\r\n}),null));\r\n}\r\npromesa.exec.resolve_executor = (function promesa$exec$resolve_executor(var_args){\r\nvar G__26787 = arguments.length;\r\nswitch (G__26787) {\r\ncase 0:\r\nreturn promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nif(cljs.core.delay_QMARK_(promesa.exec.default_executor)){\r\nreturn cljs.core.deref(promesa.exec.default_executor);\r\n} else {\r\nreturn promesa.exec.default_executor;\r\n}\r\n}));\r\n\r\n(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$1 = (function (executor){\r\nif(cljs.core.delay_QMARK_(executor)){\r\nreturn cljs.core.deref(executor);\r\n} else {\r\nreturn executor;\r\n}\r\n}));\r\n\r\n(promesa.exec.resolve_executor.cljs$lang$maxFixedArity = 1);\r\n\r\npromesa.exec.resolve_scheduler = (function promesa$exec$resolve_scheduler(var_args){\r\nvar G__26792 = arguments.length;\r\nswitch (G__26792) {\r\ncase 0:\r\nreturn promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nif(cljs.core.delay_QMARK_(promesa.exec.default_scheduler)){\r\nreturn cljs.core.deref(promesa.exec.default_scheduler);\r\n} else {\r\nreturn promesa.exec.default_scheduler;\r\n}\r\n}));\r\n\r\n(promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$1 = (function (scheduler){\r\nif(cljs.core.delay_QMARK_(scheduler)){\r\nreturn cljs.core.deref(scheduler);\r\n} else {\r\nreturn scheduler;\r\n}\r\n}));\r\n\r\n(promesa.exec.resolve_scheduler.cljs$lang$maxFixedArity = 1);\r\n\r\n/**\r\n * Run the task in the provided executor.\r\n */\r\npromesa.exec.run_BANG_ = (function promesa$exec$run_BANG_(var_args){\r\nvar G__26800 = arguments.length;\r\nswitch (G__26800) {\r\ncase 1:\r\nreturn promesa.exec.run_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn promesa.exec.run_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(promesa.exec.run_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (task){\r\nreturn promesa.protocols._run_BANG_(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$0(),task);\r\n}));\r\n\r\n(promesa.exec.run_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (executor,task){\r\nreturn promesa.protocols._run_BANG_(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$1(executor),task);\r\n}));\r\n\r\n(promesa.exec.run_BANG_.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Submit a task to be executed in a provided executor\r\n *   and return a promise that will be completed with\r\n *   the return value of a task.\r\n * \r\n *   A task is a plain clojure function.\r\n */\r\npromesa.exec.submit_BANG_ = (function promesa$exec$submit_BANG_(var_args){\r\nvar G__26803 = arguments.length;\r\nswitch (G__26803) {\r\ncase 1:\r\nreturn promesa.exec.submit_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn promesa.exec.submit_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(promesa.exec.submit_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (task){\r\nreturn promesa.protocols._submit_BANG_(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$0(),task);\r\n}));\r\n\r\n(promesa.exec.submit_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (executor,task){\r\nreturn promesa.protocols._submit_BANG_(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$1(executor),task);\r\n}));\r\n\r\n(promesa.exec.submit_BANG_.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Schedule a callable to be executed after the `ms` delay\r\n *   is reached.\r\n * \r\n *   In JVM it uses a scheduled executor service and in JS\r\n *   it uses the `setTimeout` function.\r\n */\r\npromesa.exec.schedule_BANG_ = (function promesa$exec$schedule_BANG_(var_args){\r\nvar G__26807 = arguments.length;\r\nswitch (G__26807) {\r\ncase 2:\r\nreturn promesa.exec.schedule_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn promesa.exec.schedule_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(promesa.exec.schedule_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (ms,task){\r\nreturn promesa.protocols._schedule_BANG_(promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$0(),ms,task);\r\n}));\r\n\r\n(promesa.exec.schedule_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (scheduler,ms,task){\r\nreturn promesa.protocols._schedule_BANG_(promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$1(scheduler),ms,task);\r\n}));\r\n\r\n(promesa.exec.schedule_BANG_.cljs$lang$maxFixedArity = 3);\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {promesa.protocols.IExecutor}\r\n*/\r\npromesa.exec.MicrotaskExecutor = (function (){\r\n});\r\n(promesa.exec.MicrotaskExecutor.prototype.promesa$protocols$IExecutor$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(promesa.exec.MicrotaskExecutor.prototype.promesa$protocols$IExecutor$_run_BANG_$arity$2 = (function (this$,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn promesa.protocols._mapErr(promesa.protocols._map(promesa.protocols._promise(null),(function (_){\r\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n\r\nreturn null;\r\n})),(function (e){\r\nsetTimeout((function (){\r\nthrow e;\r\n}));\r\n\r\nreturn null;\r\n}));\r\n}));\r\n\r\n(promesa.exec.MicrotaskExecutor.prototype.promesa$protocols$IExecutor$_submit_BANG_$arity$2 = (function (this$,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn promesa.protocols._mapErr(promesa.protocols._map(promesa.protocols._promise(null),(function (_){\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n})),(function (e){\r\nsetTimeout((function (){\r\nthrow e;\r\n}));\r\n\r\nreturn null;\r\n}));\r\n}));\r\n\r\n(promesa.exec.MicrotaskExecutor.getBasis = (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(promesa.exec.MicrotaskExecutor.cljs$lang$type = true);\r\n\r\n(promesa.exec.MicrotaskExecutor.cljs$lang$ctorStr = \"promesa.exec/MicrotaskExecutor\");\r\n\r\n(promesa.exec.MicrotaskExecutor.cljs$lang$ctorPrWriter = (function (this__4450__auto__,writer__4451__auto__,opt__4452__auto__){\r\nreturn cljs.core._write(writer__4451__auto__,\"promesa.exec/MicrotaskExecutor\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for promesa.exec/MicrotaskExecutor.\r\n */\r\npromesa.exec.__GT_MicrotaskExecutor = (function promesa$exec$__GT_MicrotaskExecutor(){\r\nreturn (new promesa.exec.MicrotaskExecutor());\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {promesa.protocols.IExecutor}\r\n*/\r\npromesa.exec.CurrentThreadExecutor = (function (){\r\n});\r\n(promesa.exec.CurrentThreadExecutor.prototype.promesa$protocols$IExecutor$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(promesa.exec.CurrentThreadExecutor.prototype.promesa$protocols$IExecutor$_run_BANG_$arity$2 = (function (this$,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n\r\nreturn promesa.protocols._promise(null);\r\n}));\r\n\r\n(promesa.exec.CurrentThreadExecutor.prototype.promesa$protocols$IExecutor$_submit_BANG_$arity$2 = (function (this$,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn promesa.protocols._promise((f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)));\r\n}));\r\n\r\n(promesa.exec.CurrentThreadExecutor.getBasis = (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(promesa.exec.CurrentThreadExecutor.cljs$lang$type = true);\r\n\r\n(promesa.exec.CurrentThreadExecutor.cljs$lang$ctorStr = \"promesa.exec/CurrentThreadExecutor\");\r\n\r\n(promesa.exec.CurrentThreadExecutor.cljs$lang$ctorPrWriter = (function (this__4450__auto__,writer__4451__auto__,opt__4452__auto__){\r\nreturn cljs.core._write(writer__4451__auto__,\"promesa.exec/CurrentThreadExecutor\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for promesa.exec/CurrentThreadExecutor.\r\n */\r\npromesa.exec.__GT_CurrentThreadExecutor = (function promesa$exec$__GT_CurrentThreadExecutor(){\r\nreturn (new promesa.exec.CurrentThreadExecutor());\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IPending}\r\n * @implements {promesa.protocols.ICancellable}\r\n*/\r\npromesa.exec.ScheduledTask = (function (state){\r\nthis.state = state;\r\nthis.cljs$lang$protocol_mask$partition1$ = 1;\r\nthis.cljs$lang$protocol_mask$partition0$ = 0;\r\n});\r\n(promesa.exec.ScheduledTask.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nvar done_iref = goog.object.get(self__.state,\"done\");\r\nreturn cljs.core.deref(done_iref);\r\n}));\r\n\r\n(promesa.exec.ScheduledTask.prototype.promesa$protocols$ICancellable$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(promesa.exec.ScheduledTask.prototype.promesa$protocols$ICancellable$_cancelled_QMARK_$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn goog.object.get(self__.state,\"cancelled\");\r\n}));\r\n\r\n(promesa.exec.ScheduledTask.prototype.promesa$protocols$ICancellable$_cancel_BANG_$arity$1 = (function (self){\r\nvar self__ = this;\r\nvar self__$1 = this;\r\nif(cljs.core.truth_(self__$1.promesa$protocols$ICancellable$_cancelled_QMARK_$arity$1(null))){\r\nreturn null;\r\n} else {\r\nvar cancel_fn = goog.object.get(self__.state,\"cancel-fn\");\r\ngoog.object.set(self__.state,\"cancelled\",true);\r\n\r\nreturn (cancel_fn.cljs$core$IFn$_invoke$arity$0 ? cancel_fn.cljs$core$IFn$_invoke$arity$0() : cancel_fn.call(null));\r\n}\r\n}));\r\n\r\n(promesa.exec.ScheduledTask.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null)], null);\r\n}));\r\n\r\n(promesa.exec.ScheduledTask.cljs$lang$type = true);\r\n\r\n(promesa.exec.ScheduledTask.cljs$lang$ctorStr = \"promesa.exec/ScheduledTask\");\r\n\r\n(promesa.exec.ScheduledTask.cljs$lang$ctorPrWriter = (function (this__4450__auto__,writer__4451__auto__,opt__4452__auto__){\r\nreturn cljs.core._write(writer__4451__auto__,\"promesa.exec/ScheduledTask\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for promesa.exec/ScheduledTask.\r\n */\r\npromesa.exec.__GT_ScheduledTask = (function promesa$exec$__GT_ScheduledTask(state){\r\nreturn (new promesa.exec.ScheduledTask(state));\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {promesa.protocols.IScheduler}\r\n*/\r\npromesa.exec.ScheduledExecutor = (function (){\r\n});\r\n(promesa.exec.ScheduledExecutor.prototype.promesa$protocols$IScheduler$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(promesa.exec.ScheduledExecutor.prototype.promesa$protocols$IScheduler$_schedule_BANG_$arity$3 = (function (_,ms,f){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nvar done = cljs.core.volatile_BANG_(false);\r\nvar task = (function (){\r\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}finally {cljs.core.vreset_BANG_(done,true);\r\n}});\r\nvar tid = setTimeout(task,ms);\r\nvar cancel = (function (){\r\nreturn clearTimeout(tid);\r\n});\r\nreturn promesa.exec.__GT_ScheduledTask(({\"done\": done, \"cancelled\": false, \"cancel-fn\": cancel}));\r\n}));\r\n\r\n(promesa.exec.ScheduledExecutor.getBasis = (function (){\r\nreturn cljs.core.PersistentVector.EMPTY;\r\n}));\r\n\r\n(promesa.exec.ScheduledExecutor.cljs$lang$type = true);\r\n\r\n(promesa.exec.ScheduledExecutor.cljs$lang$ctorStr = \"promesa.exec/ScheduledExecutor\");\r\n\r\n(promesa.exec.ScheduledExecutor.cljs$lang$ctorPrWriter = (function (this__4450__auto__,writer__4451__auto__,opt__4452__auto__){\r\nreturn cljs.core._write(writer__4451__auto__,\"promesa.exec/ScheduledExecutor\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for promesa.exec/ScheduledExecutor.\r\n */\r\npromesa.exec.__GT_ScheduledExecutor = (function promesa$exec$__GT_ScheduledExecutor(){\r\nreturn (new promesa.exec.ScheduledExecutor());\r\n});\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Executors & Schedulers facilities.","~:file","promesa/exec.cljc","~:line",25,"~:column",5,"~:end-line",25,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.core","~$cljs.core"],"~:use-macros",null,"~:excludes",["~#set",["~$run!"]],"~:name","~$promesa.exec","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$promesa.protocols","^T","~$pt","^T","~$promesa.util","^V","~$pu","^V","~$goog.object","^X","~$gobj","^X","^H","^H","~$goog","^Z"],"~:seen",["^K",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^H","^H"],"~:form",["~#list",["~$ns","^N","Executors & Schedulers facilities.",["^14",["~:refer-clojure","~:exclude",["^L"]]],["^14",["^10",["^T","~:as","^U"],["^V","^18","^W"],["^X","^18","^Y"]]]]],"~:flags",["^ ","^10",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^Z","^H","^T","^V","^X"]],"^Q","^N","~:resource-id",["~:shadow.build.classpath/resource","promesa/exec.cljc"],"~:compiled-at",1634348515192,"^O",["^ ","^T","^T","^U","^T","^V","^V","^W","^V","^X","^X","^Y","^X","^H","^H","^Z","^Z"],"~:resource-name","promesa/exec.cljc","~:warnings",[],"~:source",";; Copyright (c) 2019-2020 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.exec\n  \"Executors & Schedulers facilities.\"\n  (:refer-clojure :exclude [run!])\n  (:require [promesa.protocols :as pt]\n            [promesa.util :as pu]\n            #?(:cljs [goog.object :as gobj]))\n  #?(:clj\n     (:import\n      java.util.concurrent.atomic.AtomicLong\n      java.util.concurrent.Callable\n      java.util.concurrent.CompletableFuture\n      java.util.concurrent.Executor\n      java.util.concurrent.ExecutorService\n      java.util.concurrent.Executors\n      java.util.concurrent.ForkJoinPool\n      java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory\n      java.util.concurrent.Future\n      java.util.concurrent.ScheduledExecutorService\n      java.util.concurrent.ThreadFactory\n      java.util.concurrent.TimeUnit\n      java.util.concurrent.TimeoutException\n      java.util.function.Supplier)))\n\n;; --- Globals & Defaults (with CLJS Impl)\n\n#?(:clj (declare scheduled-pool)\n   :cljs (declare ->ScheduledExecutor))\n\n#?(:cljs (declare ->MicrotaskExecutor))\n\n(declare ->CurrentThreadExecutor)\n\n(defonce default-scheduler\n  (delay #?(:clj (scheduled-pool)\n            :cljs (->ScheduledExecutor))))\n\n(defonce default-executor\n  (delay #?(:clj (ForkJoinPool/commonPool)\n            :cljs (->MicrotaskExecutor))))\n\n(defonce current-thread-executor\n  (delay (->CurrentThreadExecutor)))\n\n(defn resolve-executor\n  ([] (if (delay? default-executor) @default-executor default-executor))\n  ([executor] (if (delay? executor) @executor executor)))\n\n(defn resolve-scheduler\n  ([] (if (delay? default-scheduler) @default-scheduler default-scheduler))\n  ([scheduler] (if (delay? scheduler) @scheduler scheduler)))\n\n#?(:clj\n   (defonce processors\n     (delay (.availableProcessors (Runtime/getRuntime)))))\n\n;; --- Public Api\n\n(defn run!\n  \"Run the task in the provided executor.\"\n  ([task] (pt/-run! (resolve-executor) task))\n  ([executor task] (pt/-run! (resolve-executor executor) task)))\n\n(defn submit!\n  \"Submit a task to be executed in a provided executor\n  and return a promise that will be completed with\n  the return value of a task.\n\n  A task is a plain clojure function.\"\n  ([task]\n   (pt/-submit! (resolve-executor) task))\n  ([executor task]\n   (pt/-submit! (resolve-executor executor) task)))\n\n(defn schedule!\n  \"Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.\"\n  ([ms task]\n   (pt/-schedule! (resolve-scheduler) ms task))\n  ([scheduler ms task]\n   (pt/-schedule! (resolve-scheduler scheduler) ms task)))\n\n;; --- Pool constructorls\n\n(declare resolve-thread-factory)\n\n#?(:clj\n   (defn cached-pool\n     \"A cached thread pool constructor.\"\n     ([]\n      (Executors/newCachedThreadPool))\n     ([opts]\n      (let [factory (resolve-thread-factory opts)]\n        (Executors/newCachedThreadPool factory)))))\n\n#?(:clj\n   (defn fixed-pool\n     \"A fixed thread pool constructor.\"\n     ([n]\n      (Executors/newFixedThreadPool (int n)))\n     ([n opts]\n      (let [factory (resolve-thread-factory opts)]\n        (Executors/newFixedThreadPool (int n) factory)))))\n\n#?(:clj\n   (defn single-pool\n     \"A single thread pool constructor.\"\n     ([]\n      (Executors/newSingleThreadExecutor))\n     ([opts]\n      (let [factory (resolve-thread-factory opts)]\n        (Executors/newSingleThreadExecutor factory)))))\n\n#?(:clj\n   (defn scheduled-pool\n     \"A scheduled thread pool constructor.\"\n     ([] (Executors/newScheduledThreadPool (int 0)))\n     ([n] (Executors/newScheduledThreadPool (int n)))\n     ([n opts]\n      (let [factory (resolve-thread-factory opts)]\n        (Executors/newScheduledThreadPool (int n) factory)))))\n\n#?(:clj\n   (defn work-stealing-pool\n     \"Creates a work-stealing thread pool.\"\n     ([] (Executors/newWorkStealingPool))\n     ([n] (Executors/newWorkStealingPool (int n)))))\n\n#?(:clj\n   (defn forkjoin-pool\n     [{:keys [factory async? parallelism]\n       :or {async? true}\n       :as opts}]\n     (let [parallelism (or parallelism @processors)\n           factory (cond\n                     (instance? ForkJoinPool$ForkJoinWorkerThreadFactory factory) factory\n                     (nil? factory) ForkJoinPool/defaultForkJoinWorkerThreadFactory\n                     :else (throw (ex-info \"Unexpected thread factory\" {:factory factory})))]\n       (ForkJoinPool. (or parallelism @processors) factory nil async?))))\n\n\n;; --- Impl\n\n#?(:clj\n   (defn- thread-factory-adapter\n     \"Adapt a simple clojure function into a\n     ThreadFactory instance.\"\n     [func]\n     (reify ThreadFactory\n       (^Thread newThread [_ ^Runnable runnable]\n        (func runnable)))))\n\n#?(:clj\n   (defn counted-thread-factory\n     [name daemon]\n     (let [along (AtomicLong. 0)]\n       (reify ThreadFactory\n         (newThread [this runnable]\n           (doto (Thread. ^Runnable runnable)\n             (.setDaemon ^Boolean daemon)\n             (.setName (format name (.getAndIncrement along)))))))))\n\n#?(:clj\n   (defn forkjoin-named-thread-factory\n     [name]\n     (reify ForkJoinPool$ForkJoinWorkerThreadFactory\n       (newThread [this pool]\n         (let [wth (.newThread ForkJoinPool/defaultForkJoinWorkerThreadFactory pool)]\n           (.setName wth (str name \":\" (.getPoolIndex wth)))\n           wth)))))\n\n#?(:clj\n   (defn- thread-factory\n     [{:keys [daemon priority]\n       :or {daemon true\n            priority Thread/NORM_PRIORITY}}]\n     (thread-factory-adapter\n      (fn [runnable]\n        (let [thread (Thread. ^Runnable runnable)]\n          (.setDaemon thread daemon)\n          (.setPriority thread priority)\n          thread)))))\n\n#?(:clj\n   (defn- resolve-thread-factory\n     [opts]\n     (cond\n       (map? opts) (thread-factory opts)\n       (fn? opts) (thread-factory-adapter opts)\n       (instance? ThreadFactory opts) opts\n       :else (throw (ex-info \"Invalid thread factory\" {})))))\n\n#?(:clj\n   (extend-protocol pt/IExecutor\n     Executor\n     (-run! [this f]\n       (CompletableFuture/runAsync ^Runnable f\n                                   ^Executor this))\n     (-submit! [this f]\n       (CompletableFuture/supplyAsync ^Supplier (pu/->SupplierWrapper f)\n                                      ^Executor this))))\n\n\n\n;; Default executor that executes cljs/js tasks in the microtask\n;; queue.\n#?(:cljs\n   (deftype MicrotaskExecutor []\n     pt/IExecutor\n     (-run! [this f]\n       (-> (pt/-promise nil)\n           (pt/-map (fn [_] (f) nil))\n           (pt/-mapErr (fn [e] (js/setTimeout #(throw e)) nil))))\n\n     (-submit! [this f]\n       (-> (pt/-promise nil)\n           (pt/-map (fn [_] (f)))\n           (pt/-mapErr (fn [e] (js/setTimeout #(throw e)) nil))))))\n\n;; Executor that executes the task in the calling thread\n#?(:clj\n   (deftype CurrentThreadExecutor []\n     Executor\n     (^void execute [_ ^Runnable f]\n       (.run f)))\n\n   :cljs\n   (deftype CurrentThreadExecutor []\n     pt/IExecutor\n     (-run! [this f]\n       (f)\n       (pt/-promise nil))\n\n     (-submit! [this f]\n       (pt/-promise (f)))))\n\n;; --- Scheduler & ScheduledTask\n\n#?(:clj\n   (deftype ScheduledTask [^Future fut]\n     clojure.lang.IDeref\n     (deref [_] (.get fut))\n\n     clojure.lang.IBlockingDeref\n     (deref [_ ms default]\n       (try\n         (.get fut ms TimeUnit/MILLISECONDS)\n         (catch TimeoutException e\n           default)))\n\n     clojure.lang.IPending\n     (isRealized [_] (and (.isDone fut)\n                          (not (.isCancelled fut))))\n\n     pt/ICancellable\n     (-cancelled? [_]\n       (.isCancelled fut))\n     (-cancel! [_]\n       (when-not (.isCancelled fut)\n         (.cancel fut true)))\n\n     Future\n     (get [_] (.get fut))\n     (get [_ timeout unit] (.get fut timeout unit))\n     (isCancelled [_] (.isCancelled fut))\n     (isDone [_] (.isDone fut))\n     (cancel [_ interrupt?] (.cancel fut interrupt?)))\n\n   :cljs\n   (deftype ScheduledTask [state]\n     cljs.core/IPending\n     (-realized? [_]\n       (let [done-iref (gobj/get state \"done\")]\n         (deref done-iref)))\n\n     pt/ICancellable\n     (-cancelled? [_]\n       (gobj/get state \"cancelled\"))\n     (-cancel! [self]\n       (when-not (pt/-cancelled? self)\n         (let [cancel-fn (gobj/get state \"cancel-fn\")]\n           (gobj/set state \"cancelled\" true)\n           (cancel-fn))))))\n\n#?(:clj\n   (extend-type ScheduledExecutorService\n     pt/IScheduler\n     (-schedule! [this ms f]\n       (let [fut (.schedule this ^Callable f ^long ms TimeUnit/MILLISECONDS)]\n         (ScheduledTask. fut)))))\n\n#?(:cljs\n   (deftype ScheduledExecutor []\n     pt/IScheduler\n     (-schedule! [_ ms f]\n       (let [done (volatile! false)\n             task #(try\n                     (f)\n                     (finally\n                       (vreset! done true)))\n             tid (js/setTimeout task ms)\n             cancel #(js/clearTimeout tid)]\n         (->ScheduledTask #js {:done done\n                               :cancelled false\n                               :cancel-fn cancel})))))\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["js/promesa","js/promesa.exec","js/promesa.exec.default-scheduler","promesa.exec/default-scheduler","cljs.core/Delay","promesa.exec/->ScheduledExecutor","js/promesa.exec.default-executor","promesa.exec/default-executor","promesa.exec/->MicrotaskExecutor","js/promesa.exec.current-thread-executor","promesa.exec/current-thread-executor","promesa.exec/->CurrentThreadExecutor","var_args","G__26787","promesa.exec/resolve-executor","js/Error","cljs.core/deref","cljs.core/delay?","executor","G__26792","promesa.exec/resolve-scheduler","scheduler","G__26800","promesa.exec/run!","task","promesa.protocols/-run!","promesa.exec.resolve_executor","G__26803","promesa.exec/submit!","promesa.protocols/-submit!","G__26807","promesa.exec/schedule!","ms","promesa.protocols/-schedule!","promesa.exec.resolve_scheduler","cljs.core/PROTOCOL_SENTINEL","this__4450__auto__","writer__4451__auto__","opt__4452__auto__","cljs.core/-write","promesa.exec/MicrotaskExecutor","this","f","promesa.protocols/-promise","promesa.protocols/-map","_","promesa.protocols/-mapErr","e","js/setTimeout","promesa.exec/CurrentThreadExecutor","promesa.exec/ScheduledTask","promesa.exec/->ScheduledTask","state","done-iref","goog.object/get","self","cancel-fn","goog.object/set","promesa.exec/ScheduledExecutor","done","cljs.core/volatile!","cljs.core/vreset!","tid","cancel","js/clearTimeout"]],"~:used-vars",["^K",["~$cljs.core/PROTOCOL_SENTINEL","~$promesa.exec/->CurrentThreadExecutor","~$promesa.protocols/-map","~$promesa.exec/resolve-executor","~$cljs.core/-write","~$promesa.protocols/-schedule!","~$cljs.core/deref","~$promesa.exec/ScheduledExecutor","~$promesa.exec/resolve-thread-factory","~$promesa.protocols/-run!","~$cljs.core/vreset!","~$cljs.core/Delay","~$promesa.protocols/-promise","~$promesa.exec/CurrentThreadExecutor","~$promesa.exec/submit!","~$js/setTimeout","~$js/promesa.exec.current-thread-executor","~$promesa.protocols/-submit!","~$promesa.exec/default-executor","~$js/promesa.exec.default-executor","~$promesa.protocols/-cancelled?","~$cljs.core/volatile!","~$goog.object/set","~$promesa.exec/->ScheduledTask","~$promesa.exec/ScheduledTask","~$promesa.exec/->MicrotaskExecutor","~$js/promesa.exec","~$promesa.exec/MicrotaskExecutor","~$js/promesa","~$promesa.exec/default-scheduler","~$js/clearTimeout","~$promesa.protocols/-mapErr","~$cljs.core/delay?","~$promesa.exec/schedule!","~$js/Error","~$js/promesa.exec.default-scheduler","~$promesa.exec/current-thread-executor","~$promesa.exec/->ScheduledExecutor","~$promesa.exec/resolve-scheduler","~$promesa.exec/run!","~$goog.object/get"]]],"~:cache-keys",["~#cmap",[["^1=","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^Z","~$goog.dom.HtmlElement"]]],["^1=","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","~$goog.array","~$goog.asserts"]]],["^1=","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2M","~$goog.labs.userAgent.util","^X","~$goog.string.internal"]]],["^1=","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2N","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2P"]]],["^1=","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2N"]]],["^1=","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2N"]]],"~:SHADOW-TIMESTAMP",[1633630520000,1633630520000,1633630489000],["^1=","promesa/util.cljc"],["f2a32d5385b5fc8420d570c95c7f694e5324d903","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^H"]]],["^1=","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2N","~$goog.reflect"]]],["^1=","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2N","~$goog.fs.blob","^2Q","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2S","^2T","^2U","^2V"]]],["^1=","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2M","^2N","~$goog.html.SafeUrl","^2U","^2V","^2P"]]],["^1=","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2N","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2Z","~$goog.html.SafeStyle","^30","^2R","~$goog.html.uncheckedconversions","^2U","^2P"]]],["^1=","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1=","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2M","^2N","~$goog.dom.TagName","~$goog.dom.tags","^2Z","^34","~$goog.html.SafeStyleSheet","^30","^2R","^2[","^2S","^2T","~$goog.labs.userAgent.browser","^X","^2U","^2V","^2P"]]],["^1=","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^X"]]],["^1=","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2M"]]],["^1=","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1=","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2M","^2N","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",[]]],["^1=","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2M","^X"]]],["^1=","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","~$goog.dom.safe","^35","^2U","^2P"]]],["^1=","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2P"]]],["^1=","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","promesa/protocols.cljc"],["f2a32d5385b5fc8420d570c95c7f694e5324d903","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^H"]]],["^1=","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2M","^2N","^32","~$goog.math"]]],["^1=","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2N","^33","^2Z","^34","^3:","^30","^2R","^2U","^2P","^2S"]]],["^1=","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z"]]],["^1=","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","~$goog.math.Long","~$goog.math.Integer","^3>","^X","^2M","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1=","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2U","^2V","^2[","^2N"]]],["^1=","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2U","^34","^2V","^2M","^X","^2N","^2P"]]],["^1=","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2X"]]],["^1=","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2N","^3>"]]],["^1=","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^2N","^2V"]]],["^1=","promesa/exec.cljc"],["f2a32d5385b5fc8420d570c95c7f694e5324d903","^2H",["^ ","^2I",null,"^2J",["^K",[]],"^2K",["^Z","^H","^T","^V","^X"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1633630487000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1633630480000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1633630480000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1633630480000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1633630487000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1633630487000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1633630487000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1633630487000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1633630487000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1633630480000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1633630477000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1633630487000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1633630480000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1633630489000,"jar:file:/C:/Users/Mega/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1633630489000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Executors & Schedulers facilities.","^7","promesa/exec.cljc","^8",25,"^9",5,"^:",25,"^;",17],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",["^L"]],"^M","^N","^O",["^ "],"^R",null,"^S",["^ ","^T","^T","^U","^T","^V","^V","^W","^V","^X","^X","^Y","^X","^H","^H","^Z","^Z"],"^[",["^K",["^10"]],"~:shadow/js-access-global",["^K",["clearTimeout","Error","setTimeout"]],"^11",null,"~:defs",["^ ","~$ScheduledTask",["^ ","~:num-fields",1,"~:protocols",["^K",["~$cljs.core/IPending","~$promesa.protocols/ICancellable"]],"^M","^25","^7","promesa/exec.cljc","^;",26,"~:type",true,"^9",13,"^8",296,"~:record",false,"^:",296,"~:tag","~$function","~:skip-protocol-flag",["^K",["^4A"]]],"~$->MicrotaskExecutor",["^ ","~:protocol-inline",null,"^5",["^ ","^4@",["^K",["~$promesa.protocols/IExecutor"]],"^7","promesa/exec.cljc","^;",30,"^9",13,"~:factory","~:positional","^8",234,"^:",234,"~:arglists",["^14",["~$quote",["^14",[[]]]]],"^4G",null,"^6","Positional factory function for promesa.exec/MicrotaskExecutor."],"^4@",["^K",["^4J"]],"^M","^26","^7","promesa/exec.cljc","^;",30,"~:method-params",["^14",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^14",[null,null]],"^9",4,"~:variadic?",false,"^4K","^4L","^8",234,"~:ret-tag","^28","^:",234,"~:max-fixed-arity",0,"~:fn-var",true,"^4M",["^14",["^4N",["^14",[[]]]]],"^4G",null,"^6","Positional factory function for promesa.exec/MicrotaskExecutor."],"~$MicrotaskExecutor",["^ ","^4?",0,"^4@",["^K",["^4J"]],"^M","^28","^7","promesa/exec.cljc","^;",30,"^4C",true,"^9",13,"^8",234,"^4D",false,"^:",234,"^4E","^4F","^4G",null],"~$default-scheduler",["^ ","^M","^2:","^7","promesa/exec.cljc","^8",57,"^9",1,"^:",57,"^;",27,"^5",["^ ","^7","promesa/exec.cljc","^8",57,"^9",10,"^:",57,"^;",27],"^4E","^1T"],"~$->CurrentThreadExecutor",["^ ","^4I",null,"^5",["^ ","^4@",["^K",["^4J"]],"^7","promesa/exec.cljc","^;",34,"^9",13,"^4K","^4L","^8",254,"^:",254,"^4M",["^14",["^4N",["^14",[[]]]]],"^4G",null,"^6","Positional factory function for promesa.exec/CurrentThreadExecutor."],"^4@",["^K",["^4J"]],"^M","^1J","^7","promesa/exec.cljc","^;",34,"^4O",["^14",[[]]],"^4P",null,"^4Q",["^14",[null,null]],"^9",4,"^4R",false,"^4K","^4L","^8",254,"^4S","^1V","^:",254,"^4T",0,"^4U",true,"^4M",["^14",["^4N",["^14",[[]]]]],"^4G",null,"^6","Positional factory function for promesa.exec/CurrentThreadExecutor."],"~$schedule!",["^ ","^4I",null,"^5",["^ ","^7","promesa/exec.cljc","^8",98,"^9",7,"^:",98,"^;",16,"^4M",["^14",["^4N",["^14",[["~$ms","~$task"],["~$scheduler","^4Z","^4["]]]]],"^6","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.","~:top-fn",["^ ","^4R",false,"~:fixed-arity",3,"^4T",3,"^4O",[["^4Z","^4["],["^50","^4Z","^4["]],"^4M",["^14",[["^4Z","^4["],["^50","^4Z","^4["]]],"^4Q",["^14",[null,null]]]],"^M","^2>","^7","promesa/exec.cljc","^;",16,"^51",["^ ","^4R",false,"^52",3,"^4T",3,"^4O",[["^4Z","^4["],["^50","^4Z","^4["]],"^4M",["^14",[["^4Z","^4["],["^50","^4Z","^4["]]],"^4Q",["^14",[null,null]]],"^4O",[["^4Z","^4["],["^50","^4Z","^4["]],"^4P",null,"^52",3,"^4Q",["^14",[null,null]],"^9",1,"^4R",false,"~:methods",[["^ ","^52",2,"^4R",false,"^4E","~$any"],["^ ","^52",3,"^4R",false,"^4E","^54"]],"^8",98,"^:",98,"^4T",3,"^4U",true,"^4M",["^14",[["^4Z","^4["],["^50","^4Z","^4["]]],"^6","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"~$->ScheduledExecutor",["^ ","^4I",null,"^5",["^ ","^4@",["^K",["~$promesa.protocols/IScheduler"]],"^7","promesa/exec.cljc","^;",30,"^9",13,"^4K","^4L","^8",319,"^:",319,"^4M",["^14",["^4N",["^14",[[]]]]],"^4G",null,"^6","Positional factory function for promesa.exec/ScheduledExecutor."],"^4@",["^K",["^56"]],"^M","^2B","^7","promesa/exec.cljc","^;",30,"^4O",["^14",[[]]],"^4P",null,"^4Q",["^14",[null,null]],"^9",4,"^4R",false,"^4K","^4L","^8",319,"^4S","^1P","^:",319,"^4T",0,"^4U",true,"^4M",["^14",["^4N",["^14",[[]]]]],"^4G",null,"^6","Positional factory function for promesa.exec/ScheduledExecutor."],"~$resolve-executor",["^ ","^4I",null,"^5",["^ ","^7","promesa/exec.cljc","^8",68,"^9",7,"^:",68,"^;",23,"^4M",["^14",["^4N",["^14",[[],["~$executor"]]]]],"^51",["^ ","^4R",false,"^52",1,"^4T",1,"^4O",[[],["^58"]],"^4M",["^14",[[],["^58"]]],"^4Q",["^14",[null,null]]]],"^M","^1L","^7","promesa/exec.cljc","^;",23,"^51",["^ ","^4R",false,"^52",1,"^4T",1,"^4O",[[],["^58"]],"^4M",["^14",[[],["^58"]]],"^4Q",["^14",[null,null]]],"^4O",[[],["^58"]],"^4P",null,"^52",1,"^4Q",["^14",[null,null]],"^9",1,"^4R",false,"^53",[["^ ","^52",0,"^4R",false,"^4E",["^K",["^54","^1T"]]],["^ ","^52",1,"^4R",false,"^4E",["^K",[null,"^54"]]]],"^8",68,"^:",68,"^4T",1,"^4U",true,"^4M",["^14",[[],["^58"]]]],"~$current-thread-executor",["^ ","^M","^2A","^7","promesa/exec.cljc","^8",65,"^9",1,"^:",65,"^;",33,"^5",["^ ","^7","promesa/exec.cljc","^8",65,"^9",10,"^:",65,"^;",33],"^4E","^1T"],"~$ScheduledExecutor",["^ ","^4?",0,"^4@",["^K",["^56"]],"^M","^1P","^7","promesa/exec.cljc","^;",30,"^4C",true,"^9",13,"^8",319,"^4D",false,"^:",319,"^4E","^4F","^4G",null],"~$resolve-scheduler",["^ ","^4I",null,"^5",["^ ","^7","promesa/exec.cljc","^8",72,"^9",7,"^:",72,"^;",24,"^4M",["^14",["^4N",["^14",[[],["^50"]]]]],"^51",["^ ","^4R",false,"^52",1,"^4T",1,"^4O",[[],["^50"]],"^4M",["^14",[[],["^50"]]],"^4Q",["^14",[null,null]]]],"^M","^2C","^7","promesa/exec.cljc","^;",24,"^51",["^ ","^4R",false,"^52",1,"^4T",1,"^4O",[[],["^50"]],"^4M",["^14",[[],["^50"]]],"^4Q",["^14",[null,null]]],"^4O",[[],["^50"]],"^4P",null,"^52",1,"^4Q",["^14",[null,null]],"^9",1,"^4R",false,"^53",[["^ ","^52",0,"^4R",false,"^4E",["^K",["^54","^1T"]]],["^ ","^52",1,"^4R",false,"^4E",["^K",[null,"^54"]]]],"^8",72,"^:",72,"^4T",1,"^4U",true,"^4M",["^14",[[],["^50"]]]],"~$default-executor",["^ ","^M","^1[","^7","promesa/exec.cljc","^8",61,"^9",1,"^:",61,"^;",26,"^5",["^ ","^7","promesa/exec.cljc","^8",61,"^9",10,"^:",61,"^;",26],"^4E","^1T"],"^L",["^ ","^4I",null,"^5",["^ ","^7","promesa/exec.cljc","^8",82,"^9",7,"^:",82,"^;",11,"^4M",["^14",["^4N",["^14",[["^4["],["^58","^4["]]]]],"^6","Run the task in the provided executor.","^51",["^ ","^4R",false,"^52",2,"^4T",2,"^4O",[["^4["],["^58","^4["]],"^4M",["^14",[["^4["],["^58","^4["]]],"^4Q",["^14",[null,null]]]],"^M","^2D","^7","promesa/exec.cljc","^;",11,"^51",["^ ","^4R",false,"^52",2,"^4T",2,"^4O",[["^4["],["^58","^4["]],"^4M",["^14",[["^4["],["^58","^4["]]],"^4Q",["^14",[null,null]]],"^4O",[["^4["],["^58","^4["]],"^4P",null,"^52",2,"^4Q",["^14",[null,null]],"^9",1,"^4R",false,"^53",[["^ ","^52",1,"^4R",false,"^4E","^54"],["^ ","^52",2,"^4R",false,"^4E","^54"]],"^8",82,"^:",82,"^4T",2,"^4U",true,"^4M",["^14",[["^4["],["^58","^4["]]],"^6","Run the task in the provided executor."],"~$resolve-thread-factory",["^ ","^M","^1Q","^7","promesa/exec.cljc","^8",111,"^9",1,"^:",111,"^;",32,"~:declared",true,"^5",["^ ","^7","promesa/exec.cljc","^8",111,"^9",10,"^:",111,"^;",32,"^5>",true]],"~$CurrentThreadExecutor",["^ ","^4?",0,"^4@",["^K",["^4J"]],"^M","^1V","^7","promesa/exec.cljc","^;",34,"^4C",true,"^9",13,"^8",254,"^4D",false,"^:",254,"^4E","^4F","^4G",null],"~$submit!",["^ ","^4I",null,"^5",["^ ","^7","promesa/exec.cljc","^8",87,"^9",7,"^:",87,"^;",14,"^4M",["^14",["^4N",["^14",[["^4["],["^58","^4["]]]]],"^6","Submit a task to be executed in a provided executor\n  and return a promise that will be completed with\n  the return value of a task.\n\n  A task is a plain clojure function.","^51",["^ ","^4R",false,"^52",2,"^4T",2,"^4O",[["^4["],["^58","^4["]],"^4M",["^14",[["^4["],["^58","^4["]]],"^4Q",["^14",[null,null]]]],"^M","^1W","^7","promesa/exec.cljc","^;",14,"^51",["^ ","^4R",false,"^52",2,"^4T",2,"^4O",[["^4["],["^58","^4["]],"^4M",["^14",[["^4["],["^58","^4["]]],"^4Q",["^14",[null,null]]],"^4O",[["^4["],["^58","^4["]],"^4P",null,"^52",2,"^4Q",["^14",[null,null]],"^9",1,"^4R",false,"^53",[["^ ","^52",1,"^4R",false,"^4E","^54"],["^ ","^52",2,"^4R",false,"^4E","^54"]],"^8",87,"^:",87,"^4T",2,"^4U",true,"^4M",["^14",[["^4["],["^58","^4["]]],"^6","Submit a task to be executed in a provided executor\n  and return a promise that will be completed with\n  the return value of a task.\n\n  A task is a plain clojure function."],"~$->ScheduledTask",["^ ","^4I",null,"^5",["^ ","^4@",["^K",["^4A","^4B"]],"^7","promesa/exec.cljc","^;",26,"^9",13,"^4K","^4L","^8",296,"^:",296,"^4M",["^14",["^4N",["^14",[["~$state"]]]]],"^4G",["^K",["^4A"]],"^6","Positional factory function for promesa.exec/ScheduledTask."],"^4@",["^K",["^4A","^4B"]],"^M","^24","^7","promesa/exec.cljc","^;",26,"^4O",["^14",[["^5B"]]],"^4P",null,"^4Q",["^14",[null,null]],"^9",4,"^4R",false,"^4K","^4L","^8",296,"^4S","^25","^:",296,"^4T",1,"^4U",true,"^4M",["^14",["^4N",["^14",[["^5B"]]]]],"^4G",["^K",["^4A"]],"^6","Positional factory function for promesa.exec/ScheduledTask."]],"^12",["^ ","^H","^H"],"~:cljs.analyzer/constants",["^ ","^[",["^K",["^5B"]],"~:order",["^5B"]],"^19",["^ ","^10",["^K",[]]],"^1:",["^ "],"^1;",["^Z","^H","^T","^V","^X"]],"^Q","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^2G",[["^5G","~:static-fns"],true,["^5G","~:shadow-tweaks"],null,["^5G","~:source-map-inline"],null,["^5G","~:elide-asserts"],false,["^5G","~:optimize-constants"],null,["^5G","^1@"],null,["^5G","~:external-config"],null,["^5G","~:tooling-config"],null,["^5G","~:emit-constants"],null,["^5G","~:load-tests"],null,["^5G","~:form-size-threshold"],null,["^5G","~:data-readers"],null,["^5G","~:infer-externs"],"~:auto",["^5G","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5G","~:fn-invoke-direct"],null,["^5G","~:source-map"],"/dev/null"]]]